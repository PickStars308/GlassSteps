name: Build and Package Minecraft Mod

on:
  pull_request:
    branches: [ master ]
  push:
    tags:
      - 'v*.*.*'  # 例如 v1.0.0、v2.3.1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: GlassSteps-mod
          path: build/libs/*.jar

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: GlassSteps-mod
          path: build/libs

      - name: Check if Release already exists
        id: check_release
        run: |
          tag="${GITHUB_REF#refs/tags/}"
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag)

          if echo "$response" | jq -e '.id' > /dev/null; then
            echo "release_exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "release_exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create GitHub Release and Upload Artifact
        if: steps.check_release.outputs.release_exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: build/libs/*.jar

      - name: Skip release step (already exists)
        if: steps.check_release.outputs.release_exists == 'true'
        run: echo "Release for tag ${{ github.ref_name }} already exists. Skipping creation."
